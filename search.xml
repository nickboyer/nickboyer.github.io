<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Nginx安装]]></title>
    <url>%2F2018%2F09%2F30%2FNginx%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[下载地址下载地址http://nginx.org/en/download.html 解压nginx应用包至/usr/local目录 重命名，执行mv nginx-1.12.2 nginx命令 进入nginx的解压目录下执行 ./configure --prefix=/usr/local/nginx --user=apache --group=apache --with-http_stub_status_module --with-http_gzip_static_module --with-http_ssl_module 之后执行 make &amp;&amp; make install 命令 进入nginx/sbin/ 目录下执行 ./nginx –t 进行检查nginx的配置是否成功 启动 nginx 命令： ./nginx 关掉 nginx 命令：./nginx -s stop 注 安装过程可能缺少依赖使用yum安装即可 安装过程可能找不到pcre zlib openssl 下载指定依赖源码，configure指定地址即可--with-openssl=/usr/local/nginx/auto/lib/openssl/openssl-1.0.2n--with-zlib=/usr/local/nginx/auto/lib/zlib/zlib-1.2.11 nginx: [emerg] getpwnam(“www”) failed 方法一：在nginx.conf中 把user nobody的注释去掉既可方法二：新建www用户 nginx的配置1在nginx/conf目录下 对nginx.conf文件进行编译 配置文件内 http 标签内 upstream 对负载均衡进行处理 格式如下： #负载均衡配置 upstream preposition { #ip_hash;这里是指 负载均衡的iphash策略 解决session问题 server 172.16.30.25:8080; server 172.16.30.25:8081; } #一下设置在 server 标签下 server{ listen 8080; #修改监听端口 server_name 127.0.0.1:8080; #修改监听地址 访问本地的ip地址+端口号 即可访问nginx #请求的url过滤，/为所有url。 location / { #过滤url 为 ip地址:端口/ecps/的请求 if ( $request_uri ~* /ecps/ ){ proxy_pass http://preposition;#跳转至负载均衡upstream } #过滤url 为 ip地址:端口/ecapi/的请求 if ( $request_uri ~* /ecapi/ ){ proxy_pass http://172.16.30.25:8082;#代理 } #过滤url 为 ip地址:端口/eccf/的请求 if ( $request_uri ~* /eccf/ ){ proxy_pass http://172.16.30.25:8083;#代理 } } } 修改配置文件后 进入sbin目录 ./nginx -s reload重新加载nginx配置文件 - 常用命令参考： - nginx -s stop 强制关闭 - nginx -s quit 安全关闭 - nginx -s reload 改变配置文件的时候，重启nginx工作进程，来时配置文件生效 - nginx -s reopen 打开日志文件 - nginx -h ****帮助****]]></content>
      <tags>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[RabbitMq集群安装]]></title>
    <url>%2F2018%2F09%2F30%2FRabbitMq%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[概述通过 Erlang 的分布式特性（magic cookie 认证节点）进行 RabbitMQ 集群，各 RabbitMQ 服务为对等节点，即每个节点都提供服务给客户端连接，进行消息发送与接收。 这些节点通过 RabbitMQ HA 队列（镜像队列）进行消息队列结构复制。本文中搭建 3 个节点(172.30.1.12/172.30.1.13/172.30.1.14)，并且都是磁盘节点（所有节点状态保持一致，节点完全对等），只要有任何一个节点能够工作，RabbitMQ 集群对外就能提供服务。 环境 CentOS7.2 64 RabbitMQ3.7.7 Erlang21.0.3 开放端口 端口 描述 4369 RabbitMQ节点和CLI工具使用的对等发现服务 5672 AMQP 0-9-1和1.0客户端使用没有和使用TLS 25672 用于节点间和CLI工具通信, 除非确实需要这些端口上的外部连接(例如、集群) 否则不应公开这些端口。有关详情， 请参阅网络指南 15672 webUI管理界面 新建用户12345678910# 创建用户组groupadd rabbit# 创建用户useradd rabbit -g rabbit# 为用户创建密码passwd rabbit# 修改suduers文件，赋予用户sudo权限 ,如果有权限可以跳过此步# 在 "root ALL=(ALL) ALL" 这行下面新增一行rabbit ALL=(ALL) ALL 单机安装 安装包请注意查看兼容性RabbitMQ Erlang Version Requirements erlang下载 rabbitmq下载 123456789101112131415161718192021# 检查是否安装[rabbit@rabbitmq2 setup]# yum list installed | grep erlang[rabbit@rabbitmq2 setup]# yum list installed | grep rabbitmq# 本次安装包[rabbit@rabbitmq2 setup]# ll-rw-r--r--. 1 root root 18664360 7月 14 00:58 erlang-21.0.3-1.el7.centos.x86_64.rpm-rw-r--r--. 1 root root 9530998 7月 22 17:59 rabbitmq-server-3.7.7-1.el7.noarch.rpm# 安装erlang[rabbit@rabbitmq2 setup]$ sudo yum install -y erlang-21.0.3-1.el7.centos.x86_64.rpm# 安装rabbitmq[rabbit@rabbitmq2 setup]$ sudo yum install -y rabbitmq-server-3.7.7-1.el7.noarch.rpm# 切换root用户[rabbit@rabbitmq2 setup]$ su root# 启动守护进程[root@rabbitmq2 setup]# systemctl enable rabbitmq-server.serviceCreated symlink from /etc/systemd/system/multi-user.target.wants/rabbitmq-server.service to /usr/lib/systemd/system/rabbitmq-server.service.# 启动rabbitmq单机服务[root@rabbitmq2 setup]# /sbin/service rabbitmq-server startRedirecting to /bin/systemctl start rabbitmq-server.service# 查看rabbitmq单机状态[root@rabbitmq2 setup]# rabbitmqctl status 集群搭建172.30.1.12机器配置12345678910# 修改hosts文件[root@rabbitmq1 setup]# vi /etc/hosts172.30.1.12 rabbitmq1172.30.1.13 rabbitmq2172.30.1.14 rabbitmq3# 修改hostname[root@rabbitmq1 setup]# vi /etc/hostnamerabbitmq1[root@rabbitmq1 setup]# vi /etc/sysconfig/networkHOSTNAME=rabbitmq1 172.30.1.13机器配置12345678910# 修改hosts文件[root@rabbitmq1 setup]# vi /etc/hosts172.30.1.12 rabbitmq1172.30.1.13 rabbitmq2172.30.1.14 rabbitmq3# 修改hostname[root@rabbitmq1 setup]# vi /etc/hostnamerabbitmq2[root@rabbitmq1 setup]# vi /etc/sysconfig/networkHOSTNAME=rabbitmq2 172.30.1.14机器配置12345678910# 修改hosts文件[root@rabbitmq1 setup]# vi /etc/hosts172.30.1.12 rabbitmq1172.30.1.13 rabbitmq2172.30.1.14 rabbitmq3# 修改hostname[root@rabbitmq1 setup]# vi /etc/hostnamerabbitmq3[root@rabbitmq1 setup]# vi /etc/sysconfig/networkHOSTNAME=rabbitmq3 设置 Erlang Cookie 复制cookie文件，确保三台机器相同/var/lib/rabbitmq/.erlang.cookie参考资料 rabbitmq21234567891011# cookie拷贝[root@rabbitmq2 setup]# cd /var/lib/rabbitmq/[root@rabbitmq2 rabbitmq]# scp root@172.30.1.12:/var/lib/rabbitmq/.erlang.cookie .erlang.cookie# 重启[root@rabbitmq2 rabbitmq]# reboot[root@rabbitmq2 ~]# rabbitmqctl stop_appStopping rabbit application on node rabbit@rabbitmq2 ...[root@rabbitmq2 ~]# rabbitmqctl join_cluster rabbit@rabbitmq1Clustering node rabbit@rabbitmq2 with rabbit@rabbitmq1[root@rabbitmq2 ~]# rabbitmqctl start_app[root@rabbitmq2 ~]# rabbitmqctl cluster_status rabbitmq31234567891011# cookie拷贝[root@rabbitmq2 setup]# cd /var/lib/rabbitmq/[root@rabbitmq2 rabbitmq]# scp root@172.30.1.12:/var/lib/rabbitmq/.erlang.cookie .erlang.cookie# 重启[root@rabbitmq2 rabbitmq]# reboot[root@rabbitmq2 ~]# rabbitmqctl stop_appStopping rabbit application on node rabbit@rabbitmq2 ...[root@rabbitmq2 ~]# rabbitmqctl join_cluster rabbit@rabbitmq1Clustering node rabbit@rabbitmq2 with rabbit@rabbitmq1[root@rabbitmq2 ~]# rabbitmqctl start_app[root@rabbitmq2 ~]# rabbitmqctl cluster_status webUI管理界面12345678910# 启用管理插件[root@rabbitmq1 setup]# rabbitmq-plugins enable rabbitmq_management# 创建用户(guest不允许远程访问)[root@rabbitmq1 setup]# rabbitmqctl add_user ecas ecas# 给nickboeyr赋予角色[root@rabbitmq1 setup]# rabbitmqctl set_user_tags ecas administrator# 创建虚拟机[root@rabbitmq1 setup]# rabbitmqctl add_vhost ecas# 授权[root@rabbitmq1 setup]# rabbitmqctl set_permissions -p ecas ecas ".*" ".*" ".*" HA配置12# ecas虚拟机配置配置镜像队列[root@rabbitmq1 setup]# rabbitmqctl set_policy -p 'ecas' --priority 9 --apply-to all ecas-ha "^" '&#123;"ha-mode":"all","ha-sync-mode":"automatic"&#125;']]></content>
      <categories>
        <category>软件安装</category>
      </categories>
      <tags>
        <tag>RabbitMq</tag>
        <tag>队列</tag>
      </tags>
  </entry>
</search>
